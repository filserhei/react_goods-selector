{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","chooseTitle","length","slice","join","clearSelectedGoods","setState","selectGood","good","this","className","type","onClick","map","includes","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA0EaC,E,4MAtEbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,WACZ,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcG,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBACEJ,EAAcG,OAAO,GADvB,mB,EAKNE,mBAAqB,WACnB,EAAKC,SAAS,CAAEN,cAAe,M,EAGjCO,WAAa,SAAAC,GAAI,OAAI,WACnB,EAAKF,UAAS,SAAAP,GAAK,MACjB,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BQ,U,4CAI9C,WAAU,IAAD,OACCR,EAAkBS,KAAKV,MAAvBC,cAER,OACE,yBAAKU,UAAU,OACb,4BACGD,KAAKR,cACL,IACD,4BACES,UAAWV,EAAcE,OAAS,KAAO,YACzCS,KAAK,SACLC,QAASH,KAAKJ,oBAHhB,MASF,wBAAIK,UAAU,QACXb,EAAgBgB,KAAI,SAAAL,GAAI,OACvB,wBACEE,UAAWV,EAAcc,SAASN,GAAQ,WAAa,OACvDO,IAAKP,GAEL,8BAAOA,GACN,IACD,4BACEE,UAAWV,EAAcc,SAASN,GAAQ,YAAc,KACxDG,KAAK,SACLC,QAAS,EAAKL,WAAWC,IAH3B,oB,GAxDIQ,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dedae4f2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  chooseTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${\n          selectedGoods.slice(-1)} are selected`;\n    }\n  }\n\n  clearSelectedGoods = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  selectGood = good => () => {\n    this.setState(state => (\n      { selectedGoods: [...state.selectedGoods, good] }\n    ));\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.chooseTitle()}\n          {' '}\n          <button\n            className={selectedGoods.length ? null : 'invisible'}\n            type=\"button\"\n            onClick={this.clearSelectedGoods}\n          >\n            X\n          </button>\n        </h1>\n\n        <ul className=\"list\">\n          {goodsFromServer.map(good => (\n            <li\n              className={selectedGoods.includes(good) ? 'selected' : 'flex'}\n              key={good}\n            >\n              <span>{good}</span>\n              {' '}\n              <button\n                className={selectedGoods.includes(good) ? 'invisible' : null}\n                type=\"button\"\n                onClick={this.selectGood(good)}\n              >\n                Select\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}